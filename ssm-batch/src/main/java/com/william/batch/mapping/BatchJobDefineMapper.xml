<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.william.batch.dao.BatchJobDefineMapper" >
  <resultMap id="BaseResultMap" type="com.william.batch.model.BatchJobDefine" >
    <id column="JOB_ID" property="jobId" jdbcType="VARCHAR" />
    <result column="ID" property="id" jdbcType="DECIMAL" />
    <result column="JOB_NAME" property="jobName" jdbcType="VARCHAR" />
    <result column="PRO_NAME" property="proName" jdbcType="VARCHAR" />
    <result column="PROFILE_FLAG" property="profileFlag" jdbcType="VARCHAR" />
    <result column="PROFILE_ID" property="profileId" jdbcType="VARCHAR" />
    <result column="MANUAL_FLAG" property="manualFlag" jdbcType="VARCHAR" />
    <result column="JOB_DETAIL" property="jobDetail" jdbcType="VARCHAR" />
    <result column="CREATE_DATE" property="createDate" jdbcType="VARCHAR" />
    <result column="CREATE_USER" property="createUser" jdbcType="VARCHAR" />
    <result column="INPUT_DATE" property="inputDate" jdbcType="VARCHAR" />
    <result column="TELLER_ID" property="tellerId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    JOB_ID, ID, JOB_NAME, PRO_NAME, PROFILE_FLAG, PROFILE_ID, MANUAL_FLAG, JOB_DETAIL, 
    CREATE_DATE, CREATE_USER, INPUT_DATE, TELLER_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.william.batch.model.BatchJobDefineExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from BATCH_JOB_DEFINE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from BATCH_JOB_DEFINE
    where JOB_ID = #{jobId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from BATCH_JOB_DEFINE
    where JOB_ID = #{jobId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.william.batch.model.BatchJobDefineExample" >
    delete from BATCH_JOB_DEFINE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.william.batch.model.BatchJobDefine">
  	<!-- <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
		SELECT LAST_INSERT_ID() AS id
	</selectKey> -->
         insert into BATCH_JOB_DEFINE (JOB_ID, JOB_NAME, 
	      PRO_NAME, PROFILE_FLAG, PROFILE_ID, 
	      MANUAL_FLAG, JOB_DETAIL, CREATE_DATE, 
	      CREATE_USER, INPUT_DATE, TELLER_ID
	      )
	    values (#{jobId,jdbcType=VARCHAR}, #{jobName,jdbcType=VARCHAR}, 
	      #{proName,jdbcType=VARCHAR}, #{profileFlag,jdbcType=VARCHAR}, #{profileId,jdbcType=VARCHAR}, 
	      #{manualFlag,jdbcType=VARCHAR}, #{jobDetail,jdbcType=VARCHAR}, #{createDate,jdbcType=VARCHAR}, 
	      #{createUser,jdbcType=VARCHAR}, #{inputDate,jdbcType=VARCHAR}, #{tellerId,jdbcType=VARCHAR}
	      )
      
      <selectKey resultType="java.lang.Long" keyProperty="id" >
        SELECT BATCH_JOB_DEFINE_ID_SEQ.CURRVAL AS id FROM DUAL
      </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.william.batch.model.BatchJobDefine" >
    insert into BATCH_JOB_DEFINE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="jobId != null" >
        JOB_ID,
      </if>
      <if test="id != null" >
        ID,
      </if>
      <if test="jobName != null" >
        JOB_NAME,
      </if>
      <if test="proName != null" >
        PRO_NAME,
      </if>
      <if test="profileFlag != null" >
        PROFILE_FLAG,
      </if>
      <if test="profileId != null" >
        PROFILE_ID,
      </if>
      <if test="manualFlag != null" >
        MANUAL_FLAG,
      </if>
      <if test="jobDetail != null" >
        JOB_DETAIL,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="createUser != null" >
        CREATE_USER,
      </if>
      <if test="inputDate != null" >
        INPUT_DATE,
      </if>
      <if test="tellerId != null" >
        TELLER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="jobId != null" >
        #{jobId,jdbcType=VARCHAR},
      </if>
      <if test="id != null" >
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="jobName != null" >
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="proName != null" >
        #{proName,jdbcType=VARCHAR},
      </if>
      <if test="profileFlag != null" >
        #{profileFlag,jdbcType=VARCHAR},
      </if>
      <if test="profileId != null" >
        #{profileId,jdbcType=VARCHAR},
      </if>
      <if test="manualFlag != null" >
        #{manualFlag,jdbcType=VARCHAR},
      </if>
      <if test="jobDetail != null" >
        #{jobDetail,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="inputDate != null" >
        #{inputDate,jdbcType=VARCHAR},
      </if>
      <if test="tellerId != null" >
        #{tellerId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.william.batch.model.BatchJobDefineExample" resultType="java.lang.Integer" >
    select count(*) from BATCH_JOB_DEFINE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update BATCH_JOB_DEFINE
    <set >
      <if test="record.jobId != null" >
        JOB_ID = #{record.jobId,jdbcType=VARCHAR},
      </if>
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.jobName != null" >
        JOB_NAME = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.proName != null" >
        PRO_NAME = #{record.proName,jdbcType=VARCHAR},
      </if>
      <if test="record.profileFlag != null" >
        PROFILE_FLAG = #{record.profileFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.profileId != null" >
        PROFILE_ID = #{record.profileId,jdbcType=VARCHAR},
      </if>
      <if test="record.manualFlag != null" >
        MANUAL_FLAG = #{record.manualFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.jobDetail != null" >
        JOB_DETAIL = #{record.jobDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        CREATE_DATE = #{record.createDate,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null" >
        CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.inputDate != null" >
        INPUT_DATE = #{record.inputDate,jdbcType=VARCHAR},
      </if>
      <if test="record.tellerId != null" >
        TELLER_ID = #{record.tellerId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update BATCH_JOB_DEFINE
    set JOB_ID = #{record.jobId,jdbcType=VARCHAR},
      ID = #{record.id,jdbcType=DECIMAL},
      JOB_NAME = #{record.jobName,jdbcType=VARCHAR},
      PRO_NAME = #{record.proName,jdbcType=VARCHAR},
      PROFILE_FLAG = #{record.profileFlag,jdbcType=VARCHAR},
      PROFILE_ID = #{record.profileId,jdbcType=VARCHAR},
      MANUAL_FLAG = #{record.manualFlag,jdbcType=VARCHAR},
      JOB_DETAIL = #{record.jobDetail,jdbcType=VARCHAR},
      CREATE_DATE = #{record.createDate,jdbcType=VARCHAR},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      INPUT_DATE = #{record.inputDate,jdbcType=VARCHAR},
      TELLER_ID = #{record.tellerId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.william.batch.model.BatchJobDefine" >
    update BATCH_JOB_DEFINE
    <set >
      <if test="id != null" >
        ID = #{id,jdbcType=DECIMAL},
      </if>
      <if test="jobName != null" >
        JOB_NAME = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="proName != null" >
        PRO_NAME = #{proName,jdbcType=VARCHAR},
      </if>
      <if test="profileFlag != null" >
        PROFILE_FLAG = #{profileFlag,jdbcType=VARCHAR},
      </if>
      <if test="profileId != null" >
        PROFILE_ID = #{profileId,jdbcType=VARCHAR},
      </if>
      <if test="manualFlag != null" >
        MANUAL_FLAG = #{manualFlag,jdbcType=VARCHAR},
      </if>
      <if test="jobDetail != null" >
        JOB_DETAIL = #{jobDetail,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        CREATE_USER = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="inputDate != null" >
        INPUT_DATE = #{inputDate,jdbcType=VARCHAR},
      </if>
      <if test="tellerId != null" >
        TELLER_ID = #{tellerId,jdbcType=VARCHAR},
      </if>
    </set>
    where JOB_ID = #{jobId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.william.batch.model.BatchJobDefine" >
    update BATCH_JOB_DEFINE
    set ID = #{id,jdbcType=DECIMAL},
      JOB_NAME = #{jobName,jdbcType=VARCHAR},
      PRO_NAME = #{proName,jdbcType=VARCHAR},
      PROFILE_FLAG = #{profileFlag,jdbcType=VARCHAR},
      PROFILE_ID = #{profileId,jdbcType=VARCHAR},
      MANUAL_FLAG = #{manualFlag,jdbcType=VARCHAR},
      JOB_DETAIL = #{jobDetail,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=VARCHAR},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      INPUT_DATE = #{inputDate,jdbcType=VARCHAR},
      TELLER_ID = #{tellerId,jdbcType=VARCHAR}
    where JOB_ID = #{jobId,jdbcType=VARCHAR}
  </update>
</mapper>